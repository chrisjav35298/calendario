
{% extends 'base.html.twig' %}

{% block title %}Solicitar Turno{% endblock %}
{% block stylesheets %}

<style>
    .error-message {
    background-color: #f8d7da; /* Color de fondo rojo claro */
    color: #721c24; /* Color de texto rojo oscuro */
    border: 1px solid #f5c6cb; /* Borde rojo */
    padding: 10px; /* Espaciado interno */
    margin-bottom: 10px; /* Margen inferior */
}
</style>
{{ parent() }}
 <link rel="stylesheet" href="{{ asset('css/styles.css') }}">
{% endblock %}


   {% block main %}
   
   
 
   {{ parent()}}
   <main class="container">
    <h1 class="">Solicitar Turno</h1>
    {% for flashMessage in app.flashes('error') %}
    <div class="error-message">
        {{ flashMessage }}
    </div>
    {% endfor %}
<div class="">
    {{ form_start(form) }}
    <div class="">
        <label for="date">Fecha</label>
        {{ form_widget(form.fecha, { 'attr': {'class': 'form-control'} }) }}
    </div>
    <div class="">
        <label for="solicitante">Solicitante</label>
        {{ form_widget(form.solicitante, { 'attr': {'class': 'form-control'} }) }}
    </div>
    <div class="">
        <label for="turno">Turno</label>
        {{ form_widget(form.turno, { 'attr': {'class': 'form-control'} }) }}
    </div>
    <div class="">
        <label for="observacion"  class="hidden" >Observación</label>
        {{ form_widget(form.observacion, { 'attr': {'class': 'hidden'} }) }}
    </div>
    <div class="">
        <label for="estado"  class="hidden">Estado</label>
        {{ form_widget(form.estado, { 'attr': {'class': 'hidden'} }) }}
    </div>
    <button type="submit" class="btn btn-primary">Enviar</button>
    {{ form_end(form) }}
</div>
<div id="calendar" class="mt-4"></div>
</main>
      
{% endblock %}


{% block javascripts %}
     <script src="{{ asset('js/calendario/index.global.min.js') }}"></script>
     <script src="{{ asset('js/calendario/diasOcupados.js') }}"></script>
     <script>
        // Utilizar la variable 'url' en tu archivo JavaScript
    </script>

    <script>
    // Función para validar que la fecha seleccionada no sea anterior al día de hoy
    document.addEventListener('DOMContentLoaded', function() {
        const inputFecha = document.getElementById('solicitar_turno_fecha');
        const fechaActual = new Date();

        inputFecha.addEventListener('change', function(event) {
            const fechaIngresada = new Date(event.target.value);

            // Verificar si la fecha ingresada es menor que la fecha actual
            if (fechaIngresada < fechaActual) {
                alert('No puede seleccionar una fecha anterior al día de hoy!');
                event.target.value = ''; // Limpiar el valor del input
            }
        });
    });

 //Inicialización del calendario y manejo de selección de fechas
    document.addEventListener('DOMContentLoaded', function() {
        let turnosOcupados = {{ turnosOcupados|json_encode|raw }};
        const calendarEl = document.getElementById('calendar');
        const calendar = new FullCalendar.Calendar(calendarEl, {
            initialView: 'dayGridMonth',
            selectable: true,
            locale: 'es',
            select: function(info) {
                const fechaSeleccionada = info.start;
                const fechaActual = new Date();
                
                // Verificar si la fecha seleccionada es menor que la fecha actual
                if (fechaSeleccionada < fechaActual) {
                    alert('No puede seleccionar una fecha anterior al día de hoy!');
                    return;
                }

                const year = fechaSeleccionada.getFullYear();
                const month = String(fechaSeleccionada.getMonth() + 1).padStart(2, '0');
                const day = String(fechaSeleccionada.getDate()).padStart(2, '0');

                const fechaFormateada = `${year}-${month}-${day}`;

                if (turnosOcupados.includes(fechaFormateada)) {
                    return;
                }

                document.getElementById('solicitar_turno_fecha').value = fechaFormateada;
            },
            events: [
            {% for turno in turnosOcupados %}
            
            {
                title: '{{ turno.solicitante }}',
                start: '{{ turno.fecha }}',
                color: 'violet' // Color para indicar que el turno está ocupado
            },
            {% endfor %}
        ]
        });
        calendar.render();
    });
</script> 

{% endblock %}